#!/bin/bash

#SBATCH --partition=compute
#SBATCH --job-name=metatranscriptome
#SBATCH --mail-type=ALL
#SBATCH --mail-user=[YOUR_EMAIL]@mit.edu
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1
#SBATCH --mem=180G
#SBATCH --time=48:00:00
#SBATCH --output=metatranscriptome_%j.log
#export OMP_NUM_THREADS=36

#Run the setup.sh script first

#Note - This script can be broken into parts in order to run on cluster if jobs must be shorter than 48hrs.

##Create conda environment
conda env create -f LANE_metatranscriptome.yml


##Activate conda environment:
conda activate metatranscriptome

#Define rootdir on your computing environment, this is the directory if you type `pwd` inside the directory from cloning this repo. For example, on the Poseidon HPC:
rootdir=/vortexfs1/omics/env-bio/collaboration/jahala/
#if your slurm cluster needs hard-coded paths, put ${rootdir} in front of every file path here and this sript will run and produce results


##Download Data
cd /data/metatranscriptome/
for i in `cat  tools/access_list_mt.txt`
do
fasterq-dump --split-3 --verbose -O /data/metatranscriptome/sra $i
done
#access list is present in /tools/ directory, and in /data/raw_data/ directory. Accession list is also here: SRR10420346 SRR10420347 SRR10420348 SRR10420349 SRR10420350 SRR10420351 SRR10420352 SRR10420353 


##Trim Reads
for i in `cat  tools/access_list_mt.txt`
do
trimmomatic PE -threads 36 data/metatranscriptome/sra/${i}_1.fastq  data/metatranscriptome/sra/${i}_2.fastq output/metatranscriptome/trim_clean/${i}_1.trimmed.fastq.gz output/metatranscriptome/trim_clean/${i}_1un.trimmed.fastq.gz output/metatranscriptome/trim_clean/${i}_2.trimmed.fastq.gz output/metatranscriptome/trim_clean/${i}_2un.trimmed.fastq.gz ILLUMINACLIP:TruSeq3-PE.fa:2:40:15 MINLEN:75
done
#un is unpaired output, TruSeq3-PE.fa is present in the /tools/ directory for reference


##Merge Paired Ends
cd output/metatranscriptome/flash
for i in `cat  tools/access_list_mt.txt`
do
flash -o $i output/metatranscriptome/trim_clean/${i}_1.trimmed.fastq.gz output/metatranscriptome/trim_clean/${i}_2.trimmed.fastq.gz
done

cd output/metatranscriptome/sort_me_rna
##Remove rRNA reads
for i in `cat  tools/access_list_mt.txt`
do
idx=/tools/sortmerna
sortmerna --ref ${idx}/silva-euk-18s-id95.fasta,${idx}/db1.idx:${idx}/silva-euk-28s-id98.fasta,${idx}/db2.idx \
--ref ${idx}/rfam-5.8s-database-id98.fasta,${idx}/db3.idx:${idx}/rfam-5s-database-id98.fasta,${idx}/db4.idx \
--ref ${idx}/silva-arc-16s-id95.fasta,${idx}/db5.idx:${idx}/silva-arc-23s-id98.fasta,${idx}/db6.idx \
--ref ${idx}/silva-bac-16s-id90.fasta,${idx}/db7.idx:${idx}/silva-bac-23s-id98.fasta,${idx}/db8.idx \
--reads output/metatranscriptome/flash/${i}.extendedFrags.fastq --sam --num_alignments 1 --fastx --aligned out_${i}_aligned_rRNA.fq --other out_${i}_filtered_rRNA.fq \
-a 36 -m 180 -v
done

#index is available in /tools/ directory, make sure to download there

##Map RNA to DNA
#keep directory names short with dx_dir
dx_dir=${rootdir}output/metagenome/map_transcriptome

#concatenate genomes
for i in ${rootdir}/data/raw_data/MAGS/*fna
do
cat $i >> ${dxdir}/all.fa
done

#bowtie2
cd ${dx_dir}
mkdir ${dx_dir}/bt2 #create index directory
bowtie2-build ${dx_dir}/all.fa ${dx_dir}/bt2/all.fa 

for i in `cat  ${rootdir}/data/raw_data/access_list_mt.txt`
do
bowtie2 -x dx_dir/bt2/all.fa -U ${rootdir}/data/raw_data/metatranscriptome/${i}.extendedFrags.fastq -S ${dx_dir}/${i}_mapped_all.sam



   
submission header, activate metatranscriptome conda environment

##Differential Expression with Humann

##Humann Analysis of Bins Provided

#format the files first
for i in GCA_014872775.1_ASM1487277v1_genomic.fna GCA_014872815.1_ASM1487281v1_genomic.fna  GCA_014872825.1_ASM1487282v1_genomic.fna GCA_014872875.1_ASM1487287v1_genomic.fna
> do
> grep '>' $i  | sed 's/>//g' | cut -f 1 -d ' ' >> Rhodobacteraceae_contigs.txt
> done
(sam) [katherine.lane@poseidon-l2 MAGS]$ 
for i in GCA_014872785.1_ASM1487278v1_genomic.fna GCA_014872805.1_ASM1487280v1_genomic.fna; do grep '>' $i  | sed 's/>//g' | cut -f 1 -d ' ' >> Alteromonadaceae_contigs.txt; done
'

for i in SRR10420346 SRR10420347 SRR10420348 SRR10420349 SRR10420350 SRR10420351 SRR10420352 SRR10420353
do
samtools view -bu ${i}_mapped_all.sam | samtools sort -@36 > ${i}_mapped_all.sorted.bam
samtools index ${i}_mapped_all.sorted.bam

mkdir ${i}_rhodo
    for c in `cat Rhodobacteraceae_contigs.txt`
    do samtools view -b ${i}_mapped_all.sorted.bam $c > ${i}_rhodo/${c}_.bam.rhodo
    done
    samtools merge ${i}_out.bam.rhodo ${i}_rhodo/*rhodo
samtools sort -n ${i}_out.bam.rhodo -o ${i}_out.bam.rhodo.sorted
done
samtools sort -n SRR10420346_out.bam.rhodo -o SRR10420346_out.bam.rhodo.sorted

samtools merge reseeded_24.rhodo.bam SRR10420346_out.bam.rhodo.sorted SRR10420347_out.bam.rhodo.sorted
samtools merge reseeded_05.rhodo.bam SRR10420348_out.bam.rhodo.sorted SRR10420349_out.bam.rhodo.sorted SRR10420350_out.bam.rhodo.sorted
samtools merge control.rhodo.bam SRR10420351_out.bam.rhodo.sorted SRR10420352_out.bam.rhodo.sorted SRR10420353_out.bam.rhodo.sorted


for i in SRR10420346 SRR10420347 SRR10420348 SRR10420349 SRR10420350 SRR10420351 SRR10420352 SRR10420353
do
#samtools view -bu ${i}_mapped_all.sam | samtools sort -@36 > ${i}_mapped_all.sorted.bam
#samtools index ${i}_mapped_all.sorted.bam

mkdir ${i}_alter
    for c in `cat Alteromonadaceae_contigs.txt`
    do samtools view -b ${i}_mapped_all.sorted.bam $c > ${i}_alter/${c}_.bam.alter
    done
    samtools merge ${i}_out.bam.alter ${i}_alter/*alter
samtools sort -n ${i}_out.bam.alter -o ${i}_out.bam.alter.sorted
done

samtools merge reseeded_24.alter.bam SRR10420346_out.bam.alter.sorted SRR10420347_out.bam.alter.sorted
samtools merge reseeded_05.alter.bam SRR10420348_out.bam.alter.sorted SRR10420349_out.bam.alter.sorted SRR10420350_out.bam.alter.sorted
samtools merge control.alter.bam SRR10420351_out.bam.alter.sorted SRR10420352_out.bam.alter.sorted SRR10420353_out.bam.alter.sorted


samtools fastq  reseeded_24.alter.bam >  reseeded_24.alter.bam.fastq
humann --input reseeded_24.alter.bam.fastq --output humman_out_reseeded_24.alter_FASTQ

samtools fastq  reseeded_05.alter.bam  > reseeded_05.alter.bam.fastq
humann --input reseeded_05.alter.bam.fastq --output humman_out_reseeded_05.alter_FASTQ

samtools fastq  control.alter.bam  > control.alter.bam.fastq
humann --input control.alter.bam.fastq --output humman_out_control.alter_FASTQ

samtools fastq  reseeded_24.rhodo.bam  > reseeded_24.rhodo.bam.fastq
humann --input reseeded_24.rhodo.bam.fastq --output humman_out_reseeded_24.rhodo_FASTQ

samtools fastq  reseeded_05.rhodo.bam  > reseeded_05.rhodo.bam.fastq
humann --input reseeded_05.rhodo.bam.fastq --output humman_out_reseeded_05.rhodo_FASTQ

samtools fastq  control.rhodo.bam  > control.rhodo.bam.fastq
humann --input control.rhodo.bam.fastq --output humman_out_control.rhodo_FASTQ


##Humann Analysis of MAGS binned here


#make files containing scaffold names
for i in SRR10420346 SRR10420347 SRR10420348 SRR10420349 SRR10420350 SRR10420351 SRR10420352 SRR10420353; do samtools view -bu ${i}_mapped_all.sam | samtools sort -@ 36 > ${i}_mapped_all.sorted.bam; samtools index ${i}_mapped_all.sorted.bam; done

for i in SRR10420346 SRR10420347 SRR10420348 SRR10420349 SRR10420350 SRR10420351 SRR10420352 SRR10420353
do
mkdir ${i}_bin.10
    for c in `cat bin.10.contigs` 
    do samtools view -b ${i}_mapped_all.sorted.bam $c > ${i}_bin.10/${c}_.bam.bin.10
    done
samtools merge ${i}_out.bam.bin.10 ${i}_bin.10/*bin.10
done

for i in `cat bins.txt`
do
samtools merge reseeded_24.${i}.bam SRR10420346_out.bam.${i} SRR10420347_out.bam.${i} 
samtools merge reseeded_05.${i}.bam SRR10420348_out.bam.${i} SRR10420349_out.bam.${i}  SRR10420350_out.bam.${i} 
samtools merge control.${i}.bam SRR10420351_out.bam.${i} SRR10420352_out.bam.${i} SRR10420353_out.bam.${i}

samtools fastq  reseeded_05.${i}.bam >  reseeded_05.${i}.bam.fastq
samtools fastq  reseeded_24.${i}.bam >  reseeded_24.${i}.bam.fastq
samtools fastq  control.${i}.bam > control.${i}.bam.fastq
done

for i in `cat bins.txt`
do
echo "humann --input reseeded_05.${i}.bam.fastq --output humman_out_reseeded_05.${i}_FASTQ" > humann_reseeded_05_${i}.qsub
echo "humann --input reseeded_24.${i}.bam.fastq --output humman_out_reseeded_24.${i}_FASTQ" > humann_reseeded_24_${i}.qsub
echo "humann --input control.${i}.bam.fastq --output control.${i}_FASTQ"  > humann_control_${i}.qsub
done

for i in humann*qsub
do
sbatch $i
done
#submits 36 jobs to the cluster



#Differential Expression with DESeq
(metabat) [katherine.lane@poseidon-l2 megahit_assembly2]$ jgi_summarize_bam_contig_depths --outputDepth temp_depth.txt SRR10420352_mapped_all.sorted.bam

 for i in SRR*_mapped_all.sorted.bam; do echo $i
> b=`basename $i _mapped_all.sorted.bam`
> jgi_summarize_bam_contig_depths --outputDepth ${b}_depth.txt $i
> done


(metabat) [katherine.lane@poseidon-l2 DESEQ]$ for i in *depth.txt ; do cut -f 3 $i > ${i}.tmp; done
(metabat) [katherine.lane@poseidon-l2 DESEQ]$ for i in *tmp; do b=`basename $i _depth.txt.tmp`; sed "s/total/${b}_total/g" $i > ${i}.tmp
(metabat) [katherine.lane@poseidon-l2 DESEQ]$ cut -f 1 SRR10420346_depth.txt >names.tmp
(metabat) [katherine.lane@poseidon-l2 DESEQ]$ paste names.tmp SRR10420346_depth.txt.tmp.tmp SRR10420348_depth.txt.tmp.tmp SRR10420349_depth.txt.tmp.tmp SRR10420350_depth.txt.tmp.tmp SRR10420351_depth.txt.tmp.tmp SRR10420352_depth.txt.tmp.tmp SRR10420353_depth.txt.tmp.tmp > deseq_input.tsv

